
let Inline = Quill.import('blots/inline');

function createOverlay() {
  var div = $("<div/>");
  div.attr("id", "fullScreenOverlay");
  div.css("position", "fixed");
  div.css("background-color", "#ccc");
  div.css("top", 0);
  div.css("bottom", 0);
  div.css("left", 0);
  div.css("right", 0);
  div.css("opacity", 0.85);
  $("body").append(div);
}

function destroyOverlay() {
  $("#fullScreenOverlay").remove();
}


/**
 * COORD
 */
class CoordBlot extends Inline {

  static create(coordLatLng) {
    let node = super.create();
    node.setAttribute('data-tagtype', 'coord');
    node.setAttribute('data-lat', coordLatLng.lat());
    node.setAttribute('data-lng', coordLatLng.lng());
    return node;
  }

  static formats(node) {
    let lat = Number(node.getAttribute('data-lat'));
    let lng = Number(node.getAttribute('data-lng'));
    return { lat: lat, lng: lng };
  }

  static popupEditor(onOk, onCancel) {

    createOverlay();

    let mapDiv = $(`
    <div id="mapContainer">
      <div id="map"></div>
      <div class="buttonRow">
        <button id="ok">OK</button>
        <button id="cancel">Cancel</button>
        </div>
    </div>
    `);

    // create map
    $('body').append(mapDiv);
    let map = new google.maps.Map(document.getElementById('map'), {
      center: { lat: -37.397, lng: 143.644 },
      zoom: 8
    });

    // create crosshairs
    var chDiv = document.createElement("div");
    chDiv.style.background = "url(/img/center.png) no-repeat";
    chDiv.style.width = "50px";
    chDiv.style.height = "50px";
    map.controls[google.maps.ControlPosition.CENTER].push(chDiv);

    // close on any button
    $('#mapContainer button').click(function (e) {
      $('#mapContainer').remove();
      destroyOverlay();
    });

    // handle OK button
    $('#mapContainer #ok').click(function (e) {
      onOk(map.getCenter());
    });

  }

  static popupShow(coord) {
    let url = `https://google.com/maps?q=${coord.lat},${coord.lng}`;
    window.open(url, '_blank');
  }

}
CoordBlot.blotName = 'coord';
CoordBlot.tagName = 'span';


/**
 * DATE
 */
class DateBlot extends Inline {

  static create(yyyymmdd) {
    let node = super.create();
    node.setAttribute('data-tagtype', 'date');
    node.setAttribute('data-yyyymmdd', yyyymmdd);
    return node;
  }

  static formats(node) {
    return node.getAttribute('data-yyyymmdd');
  }

  static popupEditor(onOk) {
    let yyyymmdd = prompt("Enter date in yyyymmdd format");
    onOk(yyyymmdd);
  }

  static popupShow(yyyymmdd) {
    alert(yyyymmdd);
  }

}
DateBlot.blotName = 'date';
DateBlot.tagName = 'span';


/**
 * YOUTUBE
 */
class YoutubeBlot extends Inline {

  static create(videoid) {
    let node = super.create();
    node.setAttribute('data-tagtype', 'youtube');
    node.setAttribute('data-videoid', videoid);
    return node;
  }

  static formats(node) {
    return node.getAttribute('data-videoid');
  }

  static popupEditor(onOk) {
    let vid = prompt("Enter Youtube video id");
    onOk(vid);
  }

  static popupShow(vid) {
    let url = `https://www.youtube.com/watch?v=${vid}`;
    window.open(url, '_blank');
  }

}
YoutubeBlot.blotName = 'youtube';
YoutubeBlot.tagName = 'span';


Quill.register(CoordBlot);
Quill.register(DateBlot);
Quill.register(YoutubeBlot);

let quill = new Quill('#editor-container');


// handle clicks on tagged text
$("#editor-container").click(function (e) {

  let t = e.target;

  if (t.dataset.tagtype !== undefined) {

    switch (t.dataset.tagtype) {

      case 'coord':
        let coord = {lat: t.dataset.lat, lng: t.dataset.lng};
        CoordBlot.popupShow(coord);
        break;

      case 'date':
        DateBlot.popupShow(t.dataset.yyyymmdd);
        break;

      case 'youtube':
        YoutubeBlot.popupShow(t.dataset.videoid);
        break;

    }

  }
})


// button listeners
$('#coord-button').click(function () {
  CoordBlot.popupEditor(function (gLatLng) {
    quill.format('coord', gLatLng);
  });
});
$('#date-button').click(function () {
  DateBlot.popupEditor(function (yyyymmdd) {
    quill.format('date', yyyymmdd);
  });
});
$('#youtube-button').click(function () {
  YoutubeBlot.popupEditor(function (vid) {
    quill.format('youtube', vid);
  });
});


function initMap() {
  console.log("initMap()");
}

